// Pasos generales:
    //~ Arreglar problemas de logica restantes
    //~ Centrarnos en detalles finales del estilo y responsive

// Estilos:
    // dar estilos a los globes
    // terminar previsualizacion de contrasenia
    // arreglar error de estilo al acceder a chat directamente desde notification
    // agregar overflow hidden al message container
    // modificar Nombres de Documents y icono de la pagina
    // darle estilos personalizados a todo lo que este por default (inputs)
    //  Agregar estilos cuando se use el tab en formularios, para buttons e inputs
    // solucionar problema de home al cargar chat (el header se sale de la pantalla)
    // modificar estilos de los backButtons
    // hacer comprobaciones de existencia antes de hacer llamados a componentes para evitar ejecuciones de funciones innecesarias
    // agregar ambos signos de interrogacion y exclamacion
    // agregar animcion bien arrecha en la palabra FriendNet del home unloged
    // agregar modo obscuro y claro
    // agregar mensajes de error mas carismaticos pero a la vez serios
    // buscar logos para la aplicacion
    // revisar y mejorar mensajes de buttons

// Logica:
    //* medio:
        // refactorizar codigo de submit en signup y profile
        // refactorizar/testear/depurar codigo de checkeo de imagen en el signup y profile
        // una vez implementado checkeo "local" de imagenes, buscar optimizacion en cloudinary

        // eliminar imagen antigua de usuario en cloudinary al actualizar perfil
        // buscar otra forma de enviar correos de activacion
        // agregar permission classes en el backedn y buscar que el usuario siempre se deslogee cuando se salga de la pagina
        // emplear validate para validaciones en el backend
        // optimizar imagenes de cloudinary, y eliminar las que sean ejemplares 
        //  agregar filtrado de usuarios en home
        // mejorar sistema de envio de mensajes para mayor velocidad (cacheo de mensajes con websockets como con notificaciones)


    //* dificil
        // usar paginacion
        // encriptar formularios de react
        // usar webSockets para mensajes
        // user webSockets para actualizacion de notificaciones
        // cachear imagen del usuario
        // revisar tiempo de vida de token de autenticacion (comportamiento una vez que la sesion este cerrada)
        // testear todas las funcionalidades de la aplicacion y hacer respectivos refactors



//Produccion:
    // comprobar funcionamiento en todos los navegadores y con todas las resoluciones
    // pruebas unitarias
    // investigar sobre seguridad para proyectos django
    // repasar todo lo aprendido en el proyecto, revisando todo el mismo
    // agrgar documentacion a la api

