[1mdiff --git a/FriendNet/settings.py b/FriendNet/settings.py[m
[1mindex ee41318..4a7dd2d 100644[m
[1m--- a/FriendNet/settings.py[m
[1m+++ b/FriendNet/settings.py[m
[36m@@ -25,7 +25,7 @@[m [mSECRETS = read_secret_data(SECRET_FILE_PATH)[m
 [m
 [m
 [m
[31m-DEBUG = False[m
[32m+[m[32mDEBUG = True[m[41m [m
 [m
 if (DEBUG):[m
     CORS_ALLOWED_ORIGINS = [[m
[1mdiff --git a/applications/Chats/managers.py b/applications/Chats/managers.py[m
[1mindex d9e4e58..1340cd6 100644[m
[1m--- a/applications/Chats/managers.py[m
[1m+++ b/applications/Chats/managers.py[m
[36m@@ -1,3 +1,4 @@[m
[32m+[m[32mfrom applications.Usuarios.utils.convert_to_datetime import convert_to_datetime[m
 from django.db.models import manager[m
 from .utils.getCurrentFormatedDate import getCurrentFormatedDate[m
 from django.core.cache import cache[m
[36m@@ -64,6 +65,34 @@[m [mclass ChatsManager(manager.Manager):[m
                 return "no_more_pages"[m
         else:[m
             return {"messages_hist" : "no_messages_between"}[m
[32m+[m[32m    def recent_message_id_list(self, session_user):[m
[32m+[m[32m        asociated_chats = self.all().filter(users__id=session_user.id)[m
[32m+[m[32m        print(asociated_chats)[m
[32m+[m[32m        print(f"Cantidad de chats {asociated_chats.count()}")[m
[32m+[m[32m        recent_dict = {}[m
[32m+[m[32m        for chat in asociated_chats:[m
[32m+[m[32m            chat_users = chat.users.all()[m
[32m+[m[32m            if (chat_users.count() == 2):[m
[32m+[m[32m                recent_message = chat.messages.order_by('-created_at').first()[m
[32m+[m[32m                if (recent_message):[m
[32m+[m[32m                    recent_dict[chat_users.exclude(id=session_user.id)[0].username] = convert_to_datetime(recent_message.created_at)[m
[32m+[m[32m                else:[m
[32m+[m[32m                    print("Error con mensaje !")[m
[32m+[m[32m        sorted_values = list(recent_dict.values()).copy()[m
[32m+[m[32m        sorted_values.sort()[m
[32m+[m[32m        id_list = [0 for i in range(len(sorted_values))][m
[32m+[m[32m        for user_id, date in recent_dict.items():[m
[32m+[m[32m            sorted_index = sorted_values.index(date)[m
[32m+[m[32m            if (id_list[sorted_index] == 0):[m
[32m+[m[32m                id_list[sorted_index] = user_id[m
[32m+[m[32m            else:[m
[32m+[m[32m                for i in range(sorted_index, len(sorted_values)):[m
[32m+[m[32m                    if (id_list[i] == 0):[m
[32m+[m[32m                        id_list[i] = user_id[m
[32m+[m[32m                        break[m
[32m+[m[32m        print(f'Sorted ids {len(id_list)}')[m
[32m+[m[32m        return id_list[-1::-1][m
[32m+[m
 [m
 [m
 class MessagesManager(manager.Manager):[m
[1mdiff --git a/applications/Usuarios/managers.py b/applications/Usuarios/managers.py[m
[1mindex 6424f0f..0d1e2ac 100644[m
[1m--- a/applications/Usuarios/managers.py[m
[1m+++ b/applications/Usuarios/managers.py[m
[36m@@ -1,5 +1,4 @@[m
 from django.contrib.auth.models import BaseUserManager[m
[31m-import redis[m
 from .utils.constants import ([m
     USERS_LIST_ATTRS,[m
     USER_SHOWABLE_FIELDS)[m
[36m@@ -93,4 +92,4 @@[m [mclass UsuariosManager(BaseUserManager):[m
             Recibe al usuario y modifica su email con new_email[m
         """[m
         user.email = new_email[m
[31m-        user.save()[m
[32m+[m[32m        user.save()[m
\ No newline at end of file[m
[1mdiff --git a/applications/Usuarios/views.py b/applications/Usuarios/views.py[m
[1mindex b46e6ea..e438fb2 100644[m
[1m--- a/applications/Usuarios/views.py[m
[1m+++ b/applications/Usuarios/views.py[m
[36m@@ -161,6 +161,7 @@[m [mclass GetUsersListAPI(APIView):[m
                 session_user = Usuarios.objects.get(id=serialized_data.data['session_user_id'])[m
                 senders_notifications_ids = handle_initial_notification_ids('get', session_user.id)[m
                 if senders_notifications_ids == None or (int(request.query_params.get('page'))== 1):[m
[32m+[m[32m                    print(Chats.objects.recent_message_id_list(session_user))[m
                     initial_notifications_list = [a['sender_user_id'] for a in list(session_user.notifications.values('sender_user_id'))] [m
                     senders_notifications_ids = initial_notifications_list[m
                     handle_initial_notification_ids('post', session_user.id,initial_notifications_list )[m
